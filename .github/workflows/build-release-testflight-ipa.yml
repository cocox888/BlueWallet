name: BuildReleaseTestflight

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 180
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}  # Setting the environment variable
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetches all history

      - name: Specify node version
        uses: actions/setup-node@v2-beta
        with:
          node-version: 18

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install dependencies with Bundler
        run: bundle install

      - name: Install Fastlane 2.217.0
        run: gem install fastlane -v 2.217.0

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Clear Derived Data
        run: bundle exec fastlane ios clear_derived_data_lane
        working-directory: ./ios
  
      - name: Install node_modules
        run: npm install

      - name: Display release-notes.txt
        run: cat release-notes.txt

      - name: Set up Git Authentication
        env:
          ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
        run: |
          git config --global credential.helper 'cache --timeout=3600'
          git config --global http.https://github.com/.extraheader "AUTHORIZATION: basic $(echo -n x-access-token:${ACCESS_TOKEN} | base64)"

      - name: Create Temporary Keychain
        run: bundle exec fastlane ios create_temp_keychain
        working-directory: ./ios
        env: 
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Setup Provisioning Profiles
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_ACCESS_TOKEN }}
          GIT_URL: ${{ secrets.GIT_URL }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          ITC_TEAM_NAME: ${{ secrets.ITC_TEAM_NAME }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: bundle exec fastlane ios setup_provisioning_profiles
        working-directory: ./ios

      - name: Generate Build Number based on timestamp
        run: echo "NEW_BUILD_NUMBER=$(date +%s)" >> $GITHUB_ENV

      - name: Set Build Number
        env:
          NEW_BUILD_NUMBER: ${{ env.NEW_BUILD_NUMBER }}
        run: bundle exec fastlane ios increment_build_number_lane
        working-directory: ./ios

      - name: Determine Marketing Version
        run: |
          MARKETING_VERSION=$(grep MARKETING_VERSION ios/BlueWallet/BlueWallet.xcodeproj/project.pbxproj | awk -F '= ' '{print $2}' | tr -d ' ;' | head -1)
          echo "PROJECT_VERSION=$MARKETING_VERSION" >> $GITHUB_ENV
          echo "::set-output name=project_version::$MARKETING_VERSION"

      - name: Expected IPA file name
        run: |
          echo "IPA file name: BlueWallet.${{ env.PROJECT_VERSION }}(${{ env.NEW_BUILD_NUMBER }}).ipa"
  
      - name: Install CocoaPods Dependencies
        run: bundle exec fastlane ios install_pods
        working-directory: ./ios

      - name: Build App
        env:
          NEW_BUILD_NUMBER: ${{ env.NEW_BUILD_NUMBER }}
        run: bundle exec fastlane ios build_app_lane
        working-directory: ./ios

      - name: Get Latest Commit Message
        run: |
          LATEST_COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
          echo "LATEST_COMMIT_MESSAGE=${LATEST_COMMIT_MESSAGE}" >> $GITHUB_ENV

      - name: Create App Store Connect API Key JSON
        run: echo '${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}' > ./ios/appstore_api_key.json

      - name: Upload to TestFlight
        env: 
          LATEST_COMMIT_MESSAGE: ${{ env.LATEST_COMMIT_MESSAGE }}
          APP_STORE_CONNECT_API_KEY_PATH: $(pwd)/ios/appstore_api_key.p8
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_ACCESS_TOKEN }}
          GIT_URL: ${{ secrets.GIT_URL }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          ITC_TEAM_NAME: ${{ secrets.ITC_TEAM_NAME }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          NEW_BUILD_NUMBER: ${{ env.NEW_BUILD_NUMBER }}
          PROJECT_VERSION: ${{ env.PROJECT_VERSION }}
        run: bundle exec fastlane ios upload_to_testflight_lane
        working-directory: ./ios

      - name: Upload IPA as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: BlueWallet-${{ env.NEW_BUILD_NUMBER }}.ipa
          path: ./ios/build/BlueWallet.${{env.PROJECT_VERSION}}(${{ env.NEW_BUILD_NUMBER }}).ipa