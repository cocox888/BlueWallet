// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        minSdkVersion = 24
        supportLibVersion = "28.0.0"
        buildToolsVersion = "34.0.0"
        compileSdkVersion = 34
        targetSdkVersion = 34
        googlePlayServicesVersion = "16.+"
        googlePlayServicesIidVersion = "16.0.1"
        firebaseVersion = "17.3.4"
        firebaseMessagingVersion = "21.1.0"

        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.
        ndkVersion = "23.1.7779620"
        kotlin_version = '1.9.23'
        kotlinVersion = '1.9.23'
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath("com.android.tools.build:gradle")
        classpath("com.bugsnag:bugsnag-android-gradle-plugin:5.+")
        classpath 'com.google.gms:google-services:4.4.2'  // Google Services plugin
        classpath("com.facebook.react:react-native-gradle-plugin")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        maven {
            url("$rootDir/../node_modules/detox/Detox-android")
        }

        mavenCentral {
            // We don't want to fetch react-native from Maven Central as there are
            // older versions over there.
            content {
                excludeGroup "com.facebook.react"
            }
        }
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        google()
        maven { url 'https://www.jitpack.io' }
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty("android")) {
            project.android {
                buildToolsVersion = rootProject.ext.buildToolsVersion
                compileSdkVersion rootProject.ext.compileSdkVersion
                defaultConfig {
                    minSdkVersion rootProject.ext.minSdkVersion
                }
            }
        }

        // Check if the project name is 'rn-ldk' or 'react-native-true-sheet' before applying the Kotlin compile options
        if (project.name == 'rn-ldk' || project.name == 'react-native-true-sheet') {
            project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
                kotlinOptions {
                    if (project.plugins.hasPlugin("com.android.application") || project.plugins.hasPlugin("com.android.library")) {
                        jvmTarget = project.android.compileOptions.sourceCompatibility.toString()
                    } else {
                        jvmTarget = project.sourceCompatibility.toString()
                    }
                }
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}